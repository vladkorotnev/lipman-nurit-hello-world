/****************************************************************************
 * FILE NAME:   DLMHEAD.DEF
 * MODULE NAME: Dynamic Link Module Linker Specific header
 * PROGRAMMER:  Barak Schiby.
 * DESCRIPTION: RunTime linking to DLM from applications.
 * REVISION:    01.00
 * DATE:        03.02.2000
 ****************************************************************************/

#ifndef __DLMHEADER_DEF
#define __DLMHEADER_DEF
	   /*=========================================*
	    *              I N C L U D E S            *
	    *=========================================*/
#include dlmlinkr_def
	   /*=========================================*
	    *         D E F I N I T I O N S           *
	    *=========================================*/

#define DLM_HEADER_SIZE		 64

#define DLM_HEADER_SIGNATURE_SIZE 8
#define DLM_HEADER_NAME_SIZE      DLM_NAME_SIZE
#define DLM_HEADER_NOS_VER_SIZE   5
#define DLM_HEADER_VER_SIZE       DLM_VERSION_SIZE
#define DLM_HEADER_DATE_SIZE	  8
#define DLM_HEADER_DESCRIPTION_SIZE 16
#define DLM_SPARE_SIZE            8

#define DLM_ARM_SIGNATURE "__LipDlm"
#define DLM_68_SIGNATURE  "68LipDlm"

#ifdef _ARM
  #define DLM_SIGNATURE DLM_ARM_SIGNATURE
#else
  #define DLM_SIGNATURE DLM_68_SIGNATURE
#endif

#define SINGLE_SES_1STATIC     0
#define MULTI_SES_1STATIC      1
#define MULTI_SES_MULTI_STATIC 2

	   /*=========================================*
	    *          S T R U C T U R E S            *
	    *=========================================*/

#ifdef __WIN32__
#pragma option -a1   /*set byte alignement*/
#endif

typedef packed struct DLM_header
{
   usint  StructSize; 				   /* Size of this Struct */
   ulint  SizeofDlmStatics;		      	   /* Size Of Static data	*/
   usint  NumberOfFunc;                            /* Number of function
						      in the function table */
   usint  Spare1;
   byte   Type;			                   /* Type of this DLM */
   char   NosVer[DLM_HEADER_NOS_VER_SIZE];		   /* Minimum NOS Version for thie DLM in Format xx.yy */
   char   DlmVer[DLM_HEADER_VER_SIZE];		   /* Version Of this Dlm in Format xx.yy.zz */
   char   Signature[DLM_HEADER_SIGNATURE_SIZE];
   char   DlmName [DLM_HEADER_NAME_SIZE]; 	   /* string  (8)	*/
   char   DlmDescription[DLM_HEADER_DESCRIPTION_SIZE];   /* Description of the DLM */
   char   CretionDate[DLM_HEADER_DATE_SIZE];       /* The Date the DLM Created */
   DLMEntryData  *DlmEntrysPtr;				   /* Relative pointer to the DlmEntrys */
   byte   NumOfDlms;				   /* Number of used Dlms */
   byte   baselink;                                /* Base Link Address                                                        */  /*   1  */

   byte   Spare[DLM_SPARE_SIZE];
   usint  CSPadding;        /* Check - Sum of total block equals to 0 */
 }DLM_header;
  /*2+4+2+2+1+5+8+8+8+16+8+4+1+11 = 80*/

#ifdef __WIN32__
#pragma option -a.   /*set byte alignement*/
#endif


#endif